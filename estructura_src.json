{
  "components": {
    "club": {
      "__archivos__": {
        "team-roster.tsx": "import { PlayerCard } from '@/components/club/player-card';\nimport type { Player } from '@/types';\n\ninterface TeamRosterProps {\n  players: Player[];\n}\n\nexport function TeamRoster({ players }: TeamRosterProps) {\n  if (!players || players.length === 0) {\n    return <p className=\"text-center text-muted-foreground\">No hay jugadores para mostrar en la plantilla.</p>;\n  }\n\n  const coaches = players.filter(p => p.position === 'Coach');\n  const goalkeepers = players.filter(p => p.position === 'Goalkeeper');\n  const defenders = players.filter(p => p.position === 'Defender');\n  const midfielders = players.filter(p => p.position === 'Midfielder');\n  const forwards = players.filter(p => p.position === 'Forward');\n\n  const renderPlayerSection = (title: string, playersInSection: Player[]) => {\n    if (playersInSection.length === 0) return null;\n    return (\n      <section className=\"mb-12\">\n        <h2 className=\"text-2xl font-semibold mb-6 text-center text-primary border-b-2 border-primary/30 pb-2\">\n          {title}\n        </h2>\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n          {playersInSection.map((player) => (\n            <PlayerCard key={player.id} player={player} />\n          ))}\n        </div>\n      </section>\n    );\n  };\n\n  return (\n    <div className=\"space-y-8\">\n      {renderPlayerSection('Cuerpo Técnico', coaches)}\n      {renderPlayerSection('Porteros', goalkeepers)}\n      {renderPlayerSection('Defensas', defenders)}\n      {renderPlayerSection('Centrocampistas', midfielders)}\n      {renderPlayerSection('Delanteros', forwards)}\n    </div>\n  );\n}\n",
        "match-card.tsx": "import Image from 'next/image';\nimport Link from 'next/link';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport type { Match } from '@/types';\nimport { CalendarDays, MapPin, ShieldCheck, Trophy, Tv, BarChart } from 'lucide-react'; // Added Tv, BarChart for future use\nimport { ClubLogo } from './club-logo'; // Assuming ClubLogo is available\nimport { cn } from '@/lib/utils';\n\ninterface MatchCardProps {\n  match: Match;\n}\n\nexport function MatchCard({ match }: MatchCardProps) {\n  const matchDate = new Date(match.date);\n  const isPast = match.status === 'past';\n  const isLibertadHome = match.homeTeam === \"Club Atlético Libertad\";\n\n  const TeamDisplay = ({ teamName, teamLogoUrl, isLibertad }: { teamName: string; teamLogoUrl?: string; isLibertad: boolean }) => (\n    <div className=\"flex flex-col items-center text-center w-1/3 min-w-[100px]\">\n      {isLibertad ? (\n        <ClubLogo className=\"h-12 w-12 sm:h-16 sm:w-16 mb-2 text-primary\" />\n      ) : teamLogoUrl ? (\n        <Image \n          src={teamLogoUrl} \n          alt={`Logo de ${teamName}`} \n          width={64} \n          height={64} \n          className=\"rounded-full mb-2 h-12 w-12 sm:h-16 sm:w-16 object-contain\"\n          data-ai-hint=\"team logo\" \n        />\n      ) : (\n        <div className=\"h-12 w-12 sm:h-16 sm:w-16 mb-2 bg-muted rounded-full flex items-center justify-center\">\n          <ShieldCheck className=\"h-8 w-8 text-muted-foreground\" />\n        </div>\n      )}\n      <p className=\"font-semibold text-sm sm:text-base truncate w-full\">{teamName}</p>\n    </div>\n  );\n\n  return (\n    <Card className=\"overflow-hidden shadow-lg hover:shadow-xl transition-shadow duration-300 w-full\">\n      <CardHeader className={cn(\"pb-3\", isPast ? \"bg-muted/50\" : \"bg-secondary\")}>\n        <CardTitle className=\"text-base sm:text-lg text-center text-primary truncate\">{match.competition}</CardTitle>\n        <CardDescription className=\"text-center text-xs sm:text-sm\">\n          {matchDate.toLocaleDateString('es-ES', { weekday: 'short', year: 'numeric', month: 'short', day: 'numeric' })}\n          {' - '}\n          {matchDate.toLocaleTimeString('es-ES', { hour: '2-digit', minute: '2-digit' })}\n        </CardDescription>\n      </CardHeader>\n      <CardContent className=\"pt-4 pb-4\">\n        <div className=\"flex items-center justify-around mb-4\">\n          <TeamDisplay teamName={match.homeTeam} teamLogoUrl={!isLibertadHome ? match.opponentLogoUrl : undefined} isLibertad={isLibertadHome} />\n          \n          {isPast ? (\n            <div className=\"text-center px-2\">\n              <p className=\"text-2xl sm:text-4xl font-bold text-foreground\">\n                {match.homeScore} - {match.awayScore}\n              </p>\n              <p className=\"text-xs text-muted-foreground\">Finalizado</p>\n            </div>\n          ) : (\n            <p className=\"text-2xl sm:text-4xl font-bold text-muted-foreground\">vs.</p>\n          )}\n\n          <TeamDisplay teamName={match.awayTeam} teamLogoUrl={isLibertadHome ? match.opponentLogoUrl : undefined} isLibertad={!isLibertadHome} />\n        </div>\n        \n        <div className=\"text-center text-sm text-muted-foreground flex items-center justify-center\">\n          <MapPin className=\"h-4 w-4 mr-1.5 shrink-0\" /> {match.venue}\n        </div>\n      </CardContent>\n      {isPast && match.highlightsUrl && (\n        <CardFooter className=\"bg-muted/50 p-3 justify-center\">\n          <Button variant=\"ghost\" size=\"sm\" asChild className=\"text-primary hover:text-primary/80 hover:bg-primary/10\">\n            <Link href={match.highlightsUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n              <Tv className=\"h-4 w-4 mr-1.5\" /> Ver Resumen\n            </Link>\n          </Button>\n        </CardFooter>\n      )}\n      {match.status === 'live' && (\n         <CardFooter className=\"bg-destructive/80 p-3 justify-center\">\n          <Button variant=\"destructive\" size=\"sm\" asChild className=\"text-destructive-foreground hover:bg-destructive\">\n            <Link href=\"#\"> {/* Link to live match updates */}\n              <BarChart className=\"h-4 w-4 mr-1.5 animate-pulse\" /> Actualizaciones en Vivo\n            </Link>\n          </Button>\n        </CardFooter>\n      )}\n    </Card>\n  );\n}\n",
        "club-info.tsx": "import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Mail, MapPin, Phone, Share2, Facebook, Twitter, Instagram } from 'lucide-react'; // Using lucide-react icons\nimport type { LucideIcon } from 'lucide-react';\nimport Link from 'next/link';\n\ninterface ClubInfoProps {\n  address: string;\n  phone: string;\n  email: string;\n  socialMedia: { name: string; url: string; iconName: 'Facebook' | 'Twitter' | 'Instagram' }[];\n}\n\nconst iconMap: Record<string, LucideIcon> = {\n  Facebook: Facebook,\n  Twitter: Twitter,\n  Instagram: Instagram,\n};\n\nexport function ClubInfo({ address, phone, email, socialMedia }: ClubInfoProps) {\n  return (\n    <Card className=\"shadow-lg\">\n      <CardHeader>\n        <CardTitle className=\"text-2xl text-primary flex items-center\">\n          <MapPin className=\"mr-3 h-6 w-6\" /> Sede del Club\n        </CardTitle>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        <div>\n          <h3 className=\"font-semibold text-foreground flex items-center mb-1\">\n            <MapPin className=\"mr-2 h-5 w-5 text-muted-foreground\" /> Dirección\n          </h3>\n          <p className=\"text-muted-foreground ml-7\">{address}</p>\n        </div>\n        <div>\n          <h3 className=\"font-semibold text-foreground flex items-center mb-1\">\n            <Phone className=\"mr-2 h-5 w-5 text-muted-foreground\" /> Teléfono\n          </h3>\n          <Link href={`tel:${phone.replace(/\\s/g, '')}`} className=\"text-muted-foreground hover:text-primary transition-colors ml-7\">\n            {phone}\n          </Link>\n        </div>\n        <div>\n          <h3 className=\"font-semibold text-foreground flex items-center mb-1\">\n            <Mail className=\"mr-2 h-5 w-5 text-muted-foreground\" /> Correo Electrónico\n          </h3>\n          <Link href={`mailto:${email}`} className=\"text-muted-foreground hover:text-primary transition-colors ml-7\">\n            {email}\n          </Link>\n        </div>\n        \n        {socialMedia.length > 0 && (\n          <div>\n            <h3 className=\"font-semibold text-foreground flex items-center mb-2\">\n              <Share2 className=\"mr-2 h-5 w-5 text-muted-foreground\" /> Conéctate con Nosotros\n            </h3>\n            <div className=\"flex space-x-4 ml-7\">\n              {socialMedia.map((social) => {\n                const IconComponent = iconMap[social.iconName];\n                return (\n                  IconComponent && (\n                    <Link\n                      key={social.name}\n                      href={social.url}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      aria-label={social.name}\n                      className=\"text-muted-foreground hover:text-primary transition-colors\"\n                    >\n                      <IconComponent className=\"h-7 w-7\" />\n                    </Link>\n                  )\n                );\n              })}\n            </div>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n",
        "news-feed.tsx": "import { NewsCard } from '@/components/club/news-card';\nimport type { NewsArticle } from '@/types';\n\ninterface NewsFeedProps {\n  articles: NewsArticle[];\n}\n\nexport function NewsFeed({ articles }: NewsFeedProps) {\n  if (!articles || articles.length === 0) {\n    return <p className=\"text-center text-muted-foreground\">No hay artículos de noticias para mostrar.</p>;\n  }\n\n  // Sort articles by date, newest first\n  const sortedArticles = [...articles].sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n      {sortedArticles.map((article) => (\n        <NewsCard key={article.id} article={article} />\n      ))}\n    </div>\n  );\n}\n",
        "club-logo.tsx": "import React from 'react';\n\ninterface ClubLogoProps {\n  className?: string;\n}\n\nexport function ClubLogo({ className }: ClubLogoProps) {\n  return (\n    <img src=\"/Logo.svg\" alt=\"Logo del Club Atlético Libertad\" className={className}/>\n  );\n}\n",
        "news-card.tsx": "import Image from 'next/image';\nimport Link from 'next/link';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport type { NewsArticle } from '@/types';\nimport { ArrowRight, Tag } from 'lucide-react'; // Added Tag icon for category\nimport { Badge } from '@/components/ui/badge';\n\ninterface NewsCardProps {\n  article: NewsArticle;\n}\n\nconst getCategoryInSpanish = (category: NewsArticle['category']): string => {\n  switch (category) {\n    case 'Club News': return 'Noticias del Club';\n    case 'Match Report': return 'Crónica del Partido';\n    case 'Transfer': return 'Fichaje';\n    case 'Community': return 'Comunidad';\n    default: return category;\n  }\n};\n\nexport function NewsCard({ article }: NewsCardProps) {\n  const articleDate = new Date(article.date);\n\n  return (\n    <Card id={article.id} className=\"flex flex-col h-full overflow-hidden shadow-lg hover:shadow-xl transition-shadow duration-300\">\n      {article.imageUrl && (\n        <div className=\"relative h-56 w-full\">\n          <Image\n            src={article.imageUrl}\n            alt={article.title}\n            fill\n            sizes=\"(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw\"\n            className=\"object-cover\"\n            data-ai-hint=\"news article\"\n          />\n        </div>\n      )}\n      <CardHeader>\n        <div className=\"flex justify-between items-center mb-1\">\n          <CardDescription className=\"text-xs\">\n            {articleDate.toLocaleDateString('es-ES', { year: 'numeric', month: 'long', day: 'numeric' })}\n          </CardDescription>\n          <Badge variant=\"secondary\" className=\"text-xs\">\n            <Tag className=\"mr-1 h-3 w-3\" /> {getCategoryInSpanish(article.category)}\n          </Badge>\n        </div>\n        <CardTitle className=\"text-xl lg:text-2xl hover:text-primary transition-colors\">\n          {/* If full content exists, link to a dedicated page, otherwise anchor on current page */}\n          {article.content ? (\n            <Link href={`/news/${article.id}`}>{article.title}</Link>\n          ) : (\n            article.title\n          )}\n        </CardTitle>\n      </CardHeader>\n      <CardContent className=\"flex-grow\">\n        <p className=\"text-muted-foreground line-clamp-4\">{article.summary}</p>\n      </CardContent>\n      <CardFooter>\n        {article.content ? (\n          <Button variant=\"default\" asChild className=\"bg-primary text-primary-foreground hover:bg-primary/90 w-full sm:w-auto\">\n            <Link href={`/news/${article.id}`}>\n              Leer Historia Completa <ArrowRight className=\"ml-2 h-4 w-4\" />\n            </Link>\n          </Button>\n        ) : (\n           <span className=\"text-sm text-muted-foreground italic\">Solo resumen</span>\n        )}\n      </CardFooter>\n    </Card>\n  );\n}\n",
        "player-card.tsx": "import Image from 'next/image';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\nimport { Badge } from '@/components/ui/badge';\nimport type { Player } from '@/types';\nimport { User, CalendarDays, Flag, Shirt } from 'lucide-react'; // Added Shirt icon\n\ninterface PlayerCardProps {\n  player: Player;\n}\n\nexport function PlayerCard({ player }: PlayerCardProps) {\n  const getInitial = (name: string) => name.charAt(0).toUpperCase();\n\n  return (\n    <Card className=\"flex flex-col h-full overflow-hidden shadow-lg hover:shadow-xl transition-shadow duration-300\">\n      <div className=\"relative h-48 w-full bg-secondary\">\n        <Image\n          src={player.imageUrl}\n          alt={player.name}\n          fill\n          sizes=\"(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw\"\n          className=\"object-cover object-top\" // object-top to prioritize face\n          data-ai-hint=\"player portrait\"\n        />\n        <div className=\"absolute top-2 right-2\">\n          <Badge variant=\"secondary\" className=\"text-lg font-bold bg-black/50 text-white backdrop-blur-sm\">\n            <Shirt className=\"mr-1.5 h-5 w-5 text-primary\" /> #{player.number}\n          </Badge>\n        </div>\n      </div>\n      <CardHeader className=\"flex-row items-center gap-4 pt-4\">\n        <Avatar className=\"h-16 w-16 border-2 border-primary\">\n          <AvatarImage src={player.imageUrl} alt={player.name} />\n          <AvatarFallback className=\"bg-primary text-primary-foreground text-2xl\">\n            {getInitial(player.name)}\n          </AvatarFallback>\n        </Avatar>\n        <div>\n          <CardTitle className=\"text-xl lg:text-2xl\">{player.name}</CardTitle>\n          <CardDescription className=\"text-base text-primary font-medium\">{player.position}</CardDescription>\n        </div>\n      </CardHeader>\n      <CardContent className=\"flex-grow\">\n        <p className=\"text-muted-foreground line-clamp-3 text-sm\">{player.bio}</p>\n        <div className=\"mt-3 space-y-1 text-xs text-muted-foreground\">\n          {player.nationality && (\n            <div className=\"flex items-center\">\n              <Flag className=\"mr-1.5 h-3.5 w-3.5 text-primary\" /> Nacionalidad: {player.nationality}\n            </div>\n          )}\n          {player.joinedYear && (\n            <div className=\"flex items-center\">\n              <CalendarDays className=\"mr-1.5 h-3.5 w-3.5 text-primary\" /> Se unió en: {player.joinedYear}\n            </div>\n          )}\n        </div>\n      </CardContent>\n       {/* <CardFooter>\n        <Button variant=\"link\" className=\"p-0 text-primary\">Ver Perfil</Button> \n      </CardFooter> */}\n    </Card>\n  );\n}\n",
        "contact-form.tsx": "\"use client\";\n\nimport { useEffect, useActionState } from 'react';\nimport { useFormStatus } from 'react-dom';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Label } from '@/components/ui/label';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { submitContactForm, type ContactFormState } from '@/server/actions/contact';\nimport { useToast } from '@/hooks/use-toast';\nimport { Send, Loader2 } from 'lucide-react';\n\nconst contactFormSchema = z.object({\n  name: z.string().min(2, { message: \"El nombre debe tener al menos 2 caracteres.\" }),\n  email: z.string().email({ message: \"Por favor, introduce una dirección de correo electrónico válida.\" }),\n  subject: z.string().min(5, { message: \"El asunto debe tener al menos 5 caracteres.\" }),\n  message: z.string().min(10, { message: \"El mensaje debe tener al menos 10 caracteres.\" }),\n});\n\ntype ContactFormData = z.infer<typeof contactFormSchema>;\n\nconst initialState: ContactFormState = {\n  message: '',\n  status: 'idle',\n};\n\nfunction SubmitButton() {\n  const { pending } = useFormStatus();\n  return (\n    <Button type=\"submit\" disabled={pending} className=\"w-full bg-primary text-primary-foreground hover:bg-primary/90\">\n      {pending ? (\n        <>\n          <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> Enviando...\n        </>\n      ) : (\n        <>\n          Enviar Mensaje <Send className=\"ml-2 h-4 w-4\" />\n        </>\n      )}\n    </Button>\n  );\n}\n\nexport function ContactForm() {\n  const [state, formAction] = useActionState(submitContactForm, initialState);\n  const { toast } = useToast();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset,\n  } = useForm<ContactFormData>({\n    resolver: zodResolver(contactFormSchema),\n  });\n\n  useEffect(() => {\n    if (state.status === 'success') {\n      toast({\n        title: '¡Mensaje Enviado!',\n        description: state.message,\n      });\n      reset(); // Reset form fields\n    } else if (state.status === 'error' && state.message && !state.errors) {\n      // General error not related to fields\n      toast({\n        title: 'Error',\n        description: state.message,\n        variant: 'destructive',\n      });\n    }\n  }, [state, toast, reset]);\n  \n  // Combine server-side field errors with client-side for display\n  const getFieldError = (fieldName: keyof ContactFormData) => \n    errors[fieldName]?.message || state.errors?.[fieldName]?.[0];\n\n  return (\n    <Card className=\"w-full shadow-lg\">\n      <CardHeader>\n        <CardTitle className=\"text-2xl text-primary\">Ponte en Contacto</CardTitle>\n        <CardDescription>\n          ¿Tienes preguntas o quieres saber más? Completa el formulario a continuación.\n        </CardDescription>\n      </CardHeader>\n      <CardContent>\n        <form action={formAction} className=\"space-y-6\">\n          <div>\n            <Label htmlFor=\"name\">Nombre Completo</Label>\n            <Input id=\"name\" {...register('name')} placeholder=\"Juan Pérez\" aria-invalid={!!getFieldError('name')} />\n            {getFieldError('name') && <p className=\"text-sm text-destructive mt-1\">{getFieldError('name')}</p>}\n          </div>\n\n          <div>\n            <Label htmlFor=\"email\">Dirección de Correo Electrónico</Label>\n            <Input id=\"email\" type=\"email\" {...register('email')} placeholder=\"juan.perez@ejemplo.com\" aria-invalid={!!getFieldError('email')} />\n            {getFieldError('email') && <p className=\"text-sm text-destructive mt-1\">{getFieldError('email')}</p>}\n          </div>\n\n          <div>\n            <Label htmlFor=\"subject\">Asunto</Label>\n            <Input id=\"subject\" {...register('subject')} placeholder=\"Consulta sobre entradas\" aria-invalid={!!getFieldError('subject')} />\n            {getFieldError('subject') && <p className=\"text-sm text-destructive mt-1\">{getFieldError('subject')}</p>}\n          </div>\n\n          <div>\n            <Label htmlFor=\"message\">Mensaje</Label>\n            <Textarea id=\"message\" {...register('message')} placeholder=\"Tu mensaje aquí...\" rows={5} aria-invalid={!!getFieldError('message')} />\n            {getFieldError('message') && <p className=\"text-sm text-destructive mt-1\">{getFieldError('message')}</p>}\n          </div>\n          \n          <SubmitButton />\n          \n        </form>\n      </CardContent>\n    </Card>\n  );\n}\n",
        "match-schedule.tsx": "\"use client\";\n\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { MatchCard } from '@/components/club/match-card';\nimport type { Match } from '@/types';\nimport { CalendarClock, CheckCircle } from 'lucide-react';\n\ninterface MatchScheduleProps {\n  matches: Match[];\n}\n\nexport function MatchSchedule({ matches }: MatchScheduleProps) {\n  if (!matches || matches.length === 0) {\n    return <p className=\"text-center text-muted-foreground\">No hay partidos para mostrar.</p>;\n  }\n\n  const upcomingMatches = matches\n    .filter((match) => match.status === 'upcoming' || match.status === 'live')\n    .sort((a, b) => new Date(a.date).getTime() - new Date(b.date).getTime());\n    \n  const pastMatches = matches\n    .filter((match) => match.status === 'past')\n    .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n\n  const renderMatchList = (matchList: Match[], emptyMessage: string) => {\n    if (matchList.length === 0) {\n      return <p className=\"text-center text-muted-foreground py-8\">{emptyMessage}</p>;\n    }\n    return (\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 pt-6\">\n        {matchList.map((match) => (\n          <MatchCard key={match.id} match={match} />\n        ))}\n      </div>\n    );\n  };\n\n  return (\n    <Tabs defaultValue=\"upcoming\" className=\"w-full\">\n      <TabsList className=\"grid w-full grid-cols-2 mb-6\">\n        <TabsTrigger value=\"upcoming\" className=\"text-base\">\n          <CalendarClock className=\"mr-2 h-5 w-5\" /> Próximos / En Vivo\n        </TabsTrigger>\n        <TabsTrigger value=\"past\" className=\"text-base\">\n          <CheckCircle className=\"mr-2 h-5 w-5\" /> Resultados\n        </TabsTrigger>\n      </TabsList>\n      <TabsContent value=\"upcoming\">\n        {renderMatchList(upcomingMatches, 'No hay próximos partidos programados.')}\n      </TabsContent>\n      <TabsContent value=\"past\">\n        {renderMatchList(pastMatches, 'No hay resultados de partidos anteriores disponibles.')}\n      </TabsContent>\n    </Tabs>\n  );\n}\n",
        "history-timeline.tsx": "import Image from 'next/image';\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';\nimport type { HistoricalEvent } from '@/types';\nimport { CalendarIcon } from 'lucide-react';\n\ninterface HistoryTimelineProps {\n  events: HistoricalEvent[];\n}\n\nexport function HistoryTimeline({ events }: HistoryTimelineProps) {\n  if (!events || events.length === 0) {\n    return <p className=\"text-center text-muted-foreground\">No hay eventos históricos para mostrar.</p>;\n  }\n\n  return (\n    <div className=\"relative space-y-12 before:absolute before:inset-0 before:ml-5 before:h-full before:w-0.5 before:bg-border before:-translate-x-px md:before:mx-auto md:before:translate-x-0\">\n      {events.map((event, index) => (\n        <div \n          key={event.id} \n          className=\"relative flex items-center justify-between md:justify-normal md:odd:flex-row-reverse group\"\n        >\n          {/* Icon */}\n          <div className=\"flex h-10 w-10 items-center justify-center rounded-full border border-primary bg-card shadow shrink-0 md:order-1 md:group-odd:-translate-x-1/2 md:group-even:translate-x-1/2\">\n            <CalendarIcon className=\"h-5 w-5 text-primary\" />\n          </div>\n\n          {/* Card */}\n          <Card className=\"w-[calc(100%-4rem)] md:w-[calc(50%-2.5rem)] shadow-lg group-hover:shadow-xl transition-shadow duration-300\">\n            <CardHeader>\n              <CardTitle className=\"text-xl md:text-2xl text-primary\">{event.title}</CardTitle>\n              <CardDescription className=\"font-semibold text-lg text-foreground\">{event.year}</CardDescription>\n            </CardHeader>\n            <CardContent>\n              {event.imageUrl && (\n                <div className=\"mb-4 relative aspect-video rounded-md overflow-hidden\">\n                  <Image \n                    src={event.imageUrl} \n                    alt={event.title} \n                    fill \n                    sizes=\"(max-width: 768px) 100vw, 50vw\"\n                    className=\"object-cover\"\n                    data-ai-hint=\"historical event\" \n                  />\n                </div>\n              )}\n              <p className=\"text-muted-foreground\">{event.description}</p>\n            </CardContent>\n          </Card>\n        </div>\n      ))}\n    </div>\n  );\n}\n"
      }
    },
    "ui": {
      "__archivos__": {
        "form.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n",
        "slider.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n",
        "table.tsx": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n",
        "toast.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n",
        "alert-dialog.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n",
        "scroll-area.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n",
        "separator.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n",
        "tooltip.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n",
        "radio-group.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n",
        "skeleton.tsx": "import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n",
        "sheet.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n",
        "input.tsx": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n",
        "badge.tsx": "import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n",
        "chart.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n",
        "progress.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n",
        "alert.tsx": "import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n",
        "popover.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n",
        "switch.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n",
        "toaster.tsx": "\"use client\"\n\nimport { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n",
        "select.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n",
        "calendar.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n",
        "button.tsx": "import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n",
        "sidebar.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport { Sheet, SheetContent } from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContext = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContext | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContext>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden md:block text-sidebar-foreground\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"duration-200 relative h-svh w-[--sidebar-width] bg-transparent transition-[width] ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"duration-200 fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Alternar barra lateral</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex min-h-svh flex-1 flex-col bg-background\",\n        \"peer-data-[variant=inset]:min-h-[calc(100svh-theme(spacing.4))] md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"duration-200 flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opa] ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"absolute right-1 flex h-5 min-w-5 items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground select-none pointer-events-none\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"rounded-md h-8 flex gap-2 px-2 items-center\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 flex-1 max-w-[--skeleton-width]\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n",
        "textarea.tsx": "import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n",
        "checkbox.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n",
        "accordion.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n",
        "avatar.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n",
        "tabs.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n",
        "card.tsx": "import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n",
        "menubar.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n",
        "label.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n",
        "dialog.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n",
        "dropdown-menu.tsx": "\"use client\"\n\nimport * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n"
      }
    },
    "layout": {
      "__archivos__": {
        "header.tsx": "\"use client\";\n\nimport Link from 'next/link';\nimport { usePathname } from 'next/navigation';\nimport { BookOpen, CalendarDays, Home, Mail, Newspaper, ShieldCheck, Users } from 'lucide-react';\nimport { ClubLogo } from '@/components/club/club-logo';\nimport { cn } from '@/lib/utils';\nimport { Button } from '@/components/ui/button';\nimport { Sheet, SheetContent, SheetTrigger } from '@/components/ui/sheet';\nimport { Menu } from 'lucide-react';\nimport React from 'react';\n\nconst navItems = [\n  { href: '/', label: 'Inicio', icon: Home },\n  { href: '/history', label: 'Historia', icon: BookOpen },\n  { href: '/roster', label: 'Plantilla', icon: Users },\n  { href: '/matches', label: 'Partidos', icon: CalendarDays },\n  { href: '/news', label: 'Noticias', icon: Newspaper },\n  { href: '/contact', label: 'Contacto', icon: Mail },\n];\n\nexport function Header() {\n  const pathname = usePathname();\n  const [isSheetOpen, setIsSheetOpen] = React.useState(false);\n\n  const NavLink = ({ href, label, icon: Icon }: { href: string; label: string; icon: React.ElementType }) => (\n    <Link\n      href={href}\n      className={cn(\n        \"flex items-center px-3 py-2 text-sm font-medium rounded-md transition-colors\",\n        pathname === href\n          ? 'bg-primary text-primary-foreground hover:bg-primary/90'\n          : 'text-foreground hover:bg-accent hover:text-accent-foreground',\n        \"md:text-base\" \n      )}\n      onClick={() => setIsSheetOpen(false)}\n    >\n      <Icon className=\"mr-2 h-5 w-5\" />\n      {label}\n    </Link>\n  );\n\n  return (\n    <header className=\"sticky top-0 z-50 w-full border-b bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60\">\n      <div className=\"container mx-auto flex h-16 items-center justify-between px-4\">\n        <Link href=\"/\" className=\"flex items-center gap-2\" onClick={() => setIsSheetOpen(false)}>\n          <ClubLogo className=\"h-10 w-10 text-primary\" />\n          <span className=\"hidden sm:inline-block text-xl font-bold text-foreground whitespace-nowrap\">\n            Club Atlético Libertad\n          </span>\n          <span className=\"inline-block sm:hidden text-xl font-bold text-foreground\">\n            C.A.L.\n          </span>\n        </Link>\n\n        {/* Desktop Navigation */}\n        <nav className=\"hidden md:flex items-center space-x-1 lg:space-x-2\">\n          {navItems.map((item) => (\n            <NavLink key={item.href} {...item} />\n          ))}\n        </nav>\n\n        {/* Mobile Navigation */}\n        <div className=\"md:hidden\">\n          <Sheet open={isSheetOpen} onOpenChange={setIsSheetOpen}>\n            <SheetTrigger asChild>\n              <Button variant=\"ghost\" size=\"icon\">\n                <Menu className=\"h-6 w-6\" />\n                <span className=\"sr-only\">Alternar Menú</span>\n              </Button>\n            </SheetTrigger>\n            <SheetContent side=\"right\" className=\"w-full max-w-xs p-6\">\n              <div className=\"flex flex-col space-y-4\">\n                {navItems.map((item) => (\n                  <NavLink key={item.href} {...item} />\n                ))}\n              </div>\n            </SheetContent>\n          </Sheet>\n        </div>\n      </div>\n    </header>\n  );\n}\n",
        "footer.tsx": "import Image from 'next/image';\nimport Link from 'next/link';\nimport { Facebook, Twitter, Instagram, Youtube } from 'lucide-react';\n\nexport function Footer() {\n  const currentYear = new Date().getFullYear();\n  return (\n    <footer className=\"border-t bg-secondary/50\">\n    <div className=\"container py-8\">\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 items-center\">\n        <div className=\"flex justify-center md:justify-start\">\n           <Link href=\"/\" className=\"flex items-center space-x-2 group\">\n              <Image src=\"/Logo.svg\" alt=\"Club Libertad Logo\" width={48} height={48} className=\"h-12 w-auto\" />\n              <span className=\"font-semibold text-xl text-primary group-hover:text-accent transition-colors\">\n                Club Libertad\n              </span>\n           </Link>\n        </div>\n        \n        <div className=\"text-center text-sm text-muted-foreground\">\n          <p>&copy; {currentYear} Club Atlético Libertad. All rights reserved.</p>\n          <p>Decano del Futbol Canario.</p>\n        </div>\n\n        <div className=\"flex justify-center md:justify-end space-x-4\">\n          <Link href=\"https://www.facebook.com/OficialCAL\" aria-label=\"Facebook\" className=\"text-muted-foreground hover:text-primary transition-colors\">\n            <Facebook className=\"h-6 w-6\" />\n          </Link>\n          <Link href=\"https://www.instagram.com/decanocanario\" aria-label=\"Instagram\" className=\"text-muted-foreground hover:text-primary transition-colors\">\n            <Instagram className=\"h-6 w-6\" />\n          </Link>\n        </div>\n      </div>\n    </div>\n  </footer>\n  );\n}\n"
      }
    },
    "shared": {
      "__archivos__": {
        "section-title.tsx": "import type { LucideIcon } from 'lucide-react';\nimport { cn } from '@/lib/utils';\n\ninterface SectionTitleProps {\n  id?: string; // Added id prop for anchoring\n  title: string;\n  description?: string;\n  icon?: LucideIcon;\n  className?: string;\n  titleClassName?: string;\n  descriptionClassName?: string;\n}\n\nexport function SectionTitle({\n  id,\n  title,\n  description,\n  icon: Icon,\n  className,\n  titleClassName,\n  descriptionClassName\n}: SectionTitleProps) {\n  return (\n    <div id={id} className={cn(\"mb-8 md:mb-12 text-center\", className)}>\n      <div className=\"flex items-center justify-center mb-2\">\n        {Icon && <Icon className=\"mr-3 h-8 w-8 md:h-10 md:w-10 text-primary\" />}\n        <h1 className={cn(\n            \"text-3xl font-extrabold tracking-tight text-foreground sm:text-4xl lg:text-5xl\",\n             titleClassName\n          )}>\n          {title}\n        </h1>\n      </div>\n      {description && (\n        <p className={cn(\"mt-2 text-lg text-muted-foreground max-w-2xl mx-auto\", descriptionClassName)}>\n          {description}\n        </p>\n      )}\n    </div>\n  );\n}\n"
      }
    },
    "sections": {
      "__archivos__": {
        "upcoming-match-section.tsx": "import Image from 'next/image';\nimport Link from 'next/link';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { ArrowRight, CalendarDays } from 'lucide-react';\nimport { SectionTitle } from '@/components/shared/section-title';\nimport { ClubLogo } from '@/components/club/club-logo';\nimport type { Match } from '@/types';\n\ninterface UpcomingMatchSectionProps {\n  match: Match;\n}\n\nexport function UpcomingMatchSection({ match }: UpcomingMatchSectionProps) {\n  return (\n    <section>\n      <SectionTitle title=\"Próximo Partido\" icon={CalendarDays} />\n      <Card className=\"overflow-hidden shadow-lg hover:shadow-xl transition-shadow duration-300 bg-secondary\">\n        <CardHeader className=\"text-center\">\n          <CardTitle className=\"text-2xl md:text-3xl text-primary\">{match.competition}</CardTitle>\n          <CardDescription>{new Date(match.date).toLocaleString('es-ES', { dateStyle: 'full', timeStyle: 'short' })}</CardDescription>\n        </CardHeader>\n        <CardContent className=\"text-center\">\n          <div className=\"flex flex-col sm:flex-row items-center justify-around gap-4\">\n            <div className=\"flex flex-col items-center\">\n              {match.homeTeam === \"Club Atlético Libertad\" && <ClubLogo className=\"h-16 w-16 md:h-20 md:w-20 mb-2 text-primary\" />}\n              {match.homeTeam !== \"Club Atlético Libertad\" && match.opponentLogoUrl && (\n                <Image src={match.opponentLogoUrl} alt={`Logo de ${match.homeTeam}`} width={80} height={80} className=\"mb-2 rounded-full\" data-ai-hint=\"team logo\" />\n              )}\n              <p className=\"text-xl font-semibold\">{match.homeTeam}</p>\n            </div>\n            <p className=\"text-4xl font-bold text-muted-foreground\">vs.</p>\n            <div className=\"flex flex-col items-center\">\n              {match.awayTeam === \"Club Atlético Libertad\" && <ClubLogo className=\"h-16 w-16 md:h-20 md:w-20 mb-2 text-primary\" />}\n              {match.awayTeam !== \"Club Atlético Libertad\" && match.opponentLogoUrl && (\n                 <Image src={match.opponentLogoUrl} alt={`Logo de ${match.awayTeam}`} width={80} height={80} className=\"mb-2 rounded-full\" data-ai-hint=\"team logo\" />\n              )}\n               <p className=\"text-xl font-semibold\">{match.awayTeam}</p>\n            </div>\n          </div>\n          <p className=\"mt-4 text-lg text-muted-foreground\">{match.venue}</p>\n        </CardContent>\n        <CardFooter className=\"justify-center\">\n          <Button asChild className=\"bg-accent text-accent-foreground hover:bg-accent/90\">\n            <Link href=\"/matches\">\n              Detalles del Partido <ArrowRight className=\"ml-2 h-4 w-4\" />\n            </Link>\n          </Button>\n        </CardFooter>\n      </Card>\n    </section>\n  );\n}\n",
        "hero-principal.tsx": "import Link from 'next/link';\nimport { Button } from '@/components/ui/button';\nimport { ArrowRight, Users } from 'lucide-react';\nimport { ClubLogo } from '@/components/club/club-logo';\n\nexport function HeroPrincipal() {\n  return (\n    <section className=\"relative py-20 md:py-32 rounded-lg overflow-hidden shadow-xl bg-gradient-to-br from-primary via-primary/80 to-rose-700\">\n      <div\n        className=\"absolute inset-0 bg-cover bg-center opacity-20\"\n        style={{ backgroundImage: \"url('/tienda/hinchada.jpg')\" }}\n        data-ai-hint=\"stadium crowd\"\n      ></div>\n      <div className=\"relative container mx-auto px-4 text-center\">\n        <ClubLogo className=\"h-24 w-24 md:h-32 md:w-32 text-primary-foreground mx-auto mb-6 drop-shadow-lg\" />\n        <h1 className=\"text-4xl sm:text-5xl md:text-6xl font-extrabold tracking-tight text-primary-foreground drop-shadow-md\">\n          Club Atlético Libertad\n        </h1>\n        <p className=\"mt-4 text-lg sm:text-xl md:text-2xl text-primary-foreground/90 max-w-2xl mx-auto drop-shadow-sm\">\n          Pasión, Historia, Victoria. Únete a la familia Libertad.\n        </p>\n        <div className=\"mt-8 flex flex-col sm:flex-row justify-center items-center gap-4\">\n          <Button asChild size=\"lg\" className=\"bg-accent text-accent-foreground hover:bg-accent/90 shadow-lg transition-transform hover:scale-105\">\n            <Link href=\"/matches\">\n              Ver Partidos <ArrowRight className=\"ml-2 h-5 w-5\" />\n            </Link>\n          </Button>\n          <Button asChild variant=\"outline\" size=\"lg\" className=\"text-primary-foreground border-primary-foreground hover:bg-primary-foreground/10 shadow-lg transition-transform hover:scale-105\">\n            <Link href=\"/roster\">\n              Conoce al Equipo <Users className=\"ml-2 h-5 w-5\" />\n            </Link>\n          </Button>\n        </div>\n      </div>\n    </section>\n  );\n}\n",
        "latest-news-section.tsx": "import Image from 'next/image';\nimport Link from 'next/link';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { ArrowRight, Newspaper } from 'lucide-react';\nimport { mockNewsArticles } from '@/lib/mock-data';\nimport { SectionTitle } from '@/components/shared/section-title';\n\nexport function LatestNewsSection() {\n  const latestNews = mockNewsArticles.slice(0, 2);\n\n  return (\n    <section>\n      <SectionTitle title=\"Últimas Noticias\" icon={Newspaper} />\n      <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-1\"> {/* On lg, stack news for better readability on home */}\n        {latestNews.map((article) => (\n          <Card key={article.id} className=\"flex flex-col md:flex-row overflow-hidden shadow-lg hover:shadow-xl transition-shadow duration-300\">\n            {article.imageUrl && (\n              <div className=\"md:w-1/3 h-48 md:h-auto relative\">\n                <Image\n                  src={article.imageUrl}\n                  alt={article.title}\n                  fill\n                  sizes=\"(max-width: 768px) 100vw, (max-width: 1200px) 50vw, 33vw\"\n                  className=\"object-cover\"\n                  data-ai-hint=\"sports news\"\n                />\n              </div>\n            )}\n            <div className=\"md:w-2/3 flex flex-col\">\n              <CardHeader>\n                <CardTitle className=\"text-xl hover:text-primary transition-colors\">\n                  <Link href={`/news#${article.id}`}>{article.title}</Link>\n                </CardTitle>\n                <CardDescription>{new Date(article.date).toLocaleDateString('es-ES', { year: 'numeric', month: 'long', day: 'numeric' })}</CardDescription>\n              </CardHeader>\n              <CardContent className=\"flex-grow\">\n                <p className=\"text-muted-foreground line-clamp-3\">{article.summary}</p>\n              </CardContent>\n              <CardFooter>\n                <Button variant=\"link\" asChild className=\"text-primary hover:text-primary/80 p-0\">\n                  <Link href={`/news#${article.id}`}>\n                    Leer Más <ArrowRight className=\"ml-1 h-4 w-4\" />\n                  </Link>\n                </Button>\n              </CardFooter>\n            </div>\n          </Card>\n        ))}\n      </div>\n      <div className=\"mt-8 text-center\">\n        <Button asChild variant=\"default\" className=\"bg-primary text-primary-foreground hover:bg-primary/90\">\n          <Link href=\"/news\">\n            Todas las Noticias <ArrowRight className=\"ml-2 h-5 w-5\" />\n          </Link>\n        </Button>\n      </div>\n    </section>\n  );\n}\n",
        "hero-historia.tsx": "import Link from 'next/link';\nimport { Button } from '@/components/ui/button';\nimport { ArrowRight, ChevronDown } from 'lucide-react';\nimport { ClubLogo } from '@/components/club/club-logo';\n\nexport function HeroHistoria() {\n  return (\n    <section className=\"relative py-20 md:py-32 rounded-lg overflow-hidden shadow-xl bg-gradient-to-br from-primary via-red-700 to-accent mb-12\">\n      <div\n        className=\"absolute inset-0 bg-cover bg-center opacity-20\"\n        style={{ backgroundImage: \"url('/tienda/formatiivas1.jpg')\" }}\n        data-ai-hint=\"historical soccer\"\n        aria-hidden=\"true\"\n      ></div>\n\n      <div className=\"relative container mx-auto px-4 text-center\">\n        <ClubLogo className=\"h-24 w-24 md:h-32 md:w-32 text-primary-foreground mx-auto mb-6 drop-shadow-lg\" />\n\n        <h1 className=\"text-4xl sm:text-5xl md:text-6xl font-extrabold tracking-tight text-primary-foreground drop-shadow-md\">\n          Nuestra Historia\n        </h1>\n\n        <p className=\"mt-4 text-lg sm:text-xl md:text-2xl text-primary-foreground/90 max-w-3xl mx-auto drop-shadow-sm\">\n          Desde 1906 construyendo un legado de pasión, identidad y gloria canaria.\n        </p>\n\n        <div className=\"mt-8 flex flex-col sm:flex-row justify-center items-center gap-4\">\n          <Button asChild size=\"lg\" className=\"bg-accent text-accent-foreground hover:bg-accent/90 shadow-lg transition-transform hover:scale-105\">\n            <Link href=\"#linea-tiempo\">\n              Línea de Tiempo <ChevronDown className=\"ml-2 h-5 w-5\" />\n            </Link>\n          </Button>\n          <Button asChild variant=\"outline\" size=\"lg\" className=\"text-primary-foreground border-primary-foreground hover:bg-primary-foreground/10 shadow-lg transition-transform hover:scale-105\">\n            <Link href=\"/\">\n              Volver al Inicio\n            </Link>\n          </Button>\n        </div>\n      </div>\n    </section>\n  );\n}\n",
        "ultimasnoticias.tsx": "import type { FC } from 'react';\nimport Image from 'next/image';\nimport Link from 'next/link';\nimport type { NewsArticle } from '@/types';\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { ArrowRight, CalendarDays, Tag } from 'lucide-react';\nimport { noticias as allNoticias } from '@/lib/noticias-data';\n\ninterface UltimasNoticiasProps {\n  limit?: number;\n  showViewAllLink?: boolean;\n}\n\nexport const UltimasNoticias: FC<UltimasNoticiasProps> = ({ limit, showViewAllLink = true }) => {\n  const sortedNoticias = [...allNoticias].sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n  const noticiasToShow = limit ? sortedNoticias.slice(0, limit) : sortedNoticias;\n\n  if (!noticiasToShow || noticiasToShow.length === 0) {\n    return (\n      <div className=\"text-center py-10\">\n        <p className=\"text-xl text-muted-foreground\">No hay noticias disponibles en este momento.</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-8\">\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        {noticiasToShow.map((noticia) => {\n          const newsDate = new Date(noticia.date);\n          // Ensure date formatting is consistent or handled client-side post-hydration if issues arise\n          const formattedDate = newsDate.toLocaleDateString('es-ES', {\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric',\n          });\n\n          return (\n            <Card key={noticia.id} className=\"overflow-hidden shadow-lg hover:shadow-xl transition-shadow duration-300 flex flex-col bg-card\">\n              {noticia.imageUrl && (\n                <div className=\"relative aspect-video w-full\">\n                  <Image\n                    src={noticia.imageUrl}\n                    alt={noticia.title}\n                    layout=\"fill\"\n                    objectFit=\"cover\"\n                    data-ai-hint=\"news event\"\n                  />\n                </div>\n              )}\n              <CardHeader className=\"pb-3\">\n                <CardTitle className=\"text-xl font-semibold text-primary line-clamp-2 h-14\">{noticia.title}</CardTitle>\n                <div className=\"flex items-center text-xs text-muted-foreground space-x-2 pt-1\">\n                  <CalendarDays className=\"h-3.5 w-3.5\" />\n                  <span>{formattedDate}</span>\n                  {noticia.category && (\n                    <>\n                      <span className=\"mx-1\">•</span>\n                      <Tag className=\"h-3.5 w-3.5\" />\n                      <span>{noticia.category}</span>\n                    </>\n                  )}\n                </div>\n              </CardHeader>\n              <CardContent className=\"flex-grow pt-0\">\n                <CardDescription className=\"text-sm line-clamp-3\">{noticia.summary}</CardDescription>\n              </CardContent>\n              <CardFooter className=\"pt-3\">\n                <Button asChild variant=\"link\" className=\"text-primary p-0 hover:text-accent group\">\n                  <Link href={`/noticias/${noticia.id}`}>\n                    Ver Más <ArrowRight className=\"ml-1 h-4 w-4 group-hover:translate-x-1 transition-transform\" />\n                  </Link>\n                </Button>\n              </CardFooter>\n            </Card>\n          );\n        })}\n      </div>\n\n      {showViewAllLink && allNoticias.length > (limit || 0) && allNoticias.length > noticiasToShow.length && (\n        <div className=\"text-center mt-12\">\n          <Button asChild variant=\"default\" size=\"lg\" className=\"bg-primary hover:bg-primary/90 text-primary-foreground\">\n            <Link href=\"/noticias\">\n              Ver Todas las Noticias <ArrowRight className=\"ml-2 h-5 w-5\" />\n            </Link>\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n};\n",
        "historia-resumen.tsx": "import Link from 'next/link';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { ScrollText, ArrowRight } from 'lucide-react';\n\nexport function HistoriaResumen() {\n  return (\n    <section className=\"py-12 md:py-20 bg-background\">\n      <div className=\"container mx-auto px-4\">\n        <Card className=\"shadow-lg hover:shadow-xl transition-shadow duration-300\">\n          <CardHeader className=\"text-center\">\n            <ScrollText className=\"h-12 w-12 mx-auto text-accent mb-4\" />\n            <CardTitle className=\"text-3xl font-bold text-primary\">\n              Nuestra Rica Historia\n            </CardTitle>\n            <CardDescription className=\"text-muted-foreground mt-2 text-lg\">\n              Un legado de pasión y fútbol desde 1906.\n            </CardDescription>\n          </CardHeader>\n          <CardContent className=\"text-center\">\n            <p className=\"text-foreground mb-6 text-base leading-relaxed max-w-3xl mx-auto\">\n              Fundado el 18 de Marzo del 1906, el Club Atlético Libertad es una institución emblemática\n              del fútbol uruguayo, arraigada en la ciudad de Canelones. A lo largo de más de un siglo,\n              el club ha sido un faro de deporte y comunidad, cosechando logros y forjando una identidad\n              fuerte y respetada. Desde sus humildes comienzos hasta convertirse en un referente,\n              Libertad ha escrito páginas gloriosas, siendo protagonista en ligas locales y\n              dejando una huella imborrable en el corazón de sus hinchas.\n            </p>\n            <Button asChild variant=\"default\" size=\"lg\" className=\"bg-primary hover:bg-primary/90 text-primary-foreground\">\n              <Link href=\"/history\">\n                Descubrir Más <ArrowRight className=\"ml-2 h-5 w-5\" />\n              </Link>\n            </Button>\n          </CardContent>\n        </Card>\n      </div>\n    </section>\n  );\n}\n"
      }
    }
  },
  "server": {
    "actions": {
      "__archivos__": {
        "contact.ts": "\"use server\";\n\nimport { z } from \"zod\";\n\nconst contactFormSchema = z.object({\n  name: z.string().min(2, { message: \"El nombre debe tener al menos 2 caracteres.\" }),\n  email: z.string().email({ message: \"Por favor, introduce una dirección de correo electrónico válida.\" }),\n  subject: z.string().min(5, { message: \"El asunto debe tener al menos 5 caracteres.\" }),\n  message: z.string().min(10, { message: \"El mensaje debe tener al menos 10 caracteres.\" }),\n});\n\nexport type ContactFormState = {\n  message: string;\n  status: \"success\" | \"error\" | \"idle\";\n  errors?: {\n    name?: string[];\n    email?: string[];\n    subject?: string[];\n    message?: string[];\n  };\n};\n\nexport async function submitContactForm(\n  prevState: ContactFormState,\n  formData: FormData\n): Promise<ContactFormState> {\n  const validatedFields = contactFormSchema.safeParse({\n    name: formData.get(\"name\"),\n    email: formData.get(\"email\"),\n    subject: formData.get(\"subject\"),\n    message: formData.get(\"message\"),\n  });\n\n  if (!validatedFields.success) {\n    return {\n      message: \"Falló la validación. Por favor, revisa tus datos.\",\n      status: \"error\",\n      errors: validatedFields.error.flatten().fieldErrors,\n    };\n  }\n\n  // In a real application, you would send an email or save to a database here.\n  console.log(\"Formulario de contacto enviado:\");\n  console.log(\"Nombre:\", validatedFields.data.name);\n  console.log(\"Email:\", validatedFields.data.email);\n  console.log(\"Asunto:\", validatedFields.data.subject);\n  console.log(\"Mensaje:\", validatedFields.data.message);\n\n  // Simulate a delay\n  await new Promise(resolve => setTimeout(resolve, 1000));\n\n  return {\n    message: \"¡Gracias por tu mensaje! Nos pondremos en contacto contigo pronto.\",\n    status: \"success\",\n  };\n}\n"
      }
    }
  },
  "lib": {
    "__archivos__": {
      "mock-data.ts": "import type { HistoricalEvent, Player, Match, NewsArticle } from '@/types';\n\nexport const mockHistoricalEvents: HistoricalEvent[] = [\n  {\n    id: '1',\n    year: 1905,\n    title: 'Fundación del Club',\n    description: 'El Club Atlético Libertad fue fundado por un grupo de apasionados entusiastas del fútbol con el sueño de crear un legado duradero.',\n    imageUrl: 'https://picsum.photos/seed/history1/600/400',\n  },\n  {\n    id: '2',\n    year: 1952,\n    title: 'Primera Victoria en Campeonato',\n    description: 'Un año histórico en el que el club consiguió su primer campeonato importante, marcando una nueva era de éxitos.',\n    imageUrl: 'https://picsum.photos/seed/history2/600/400',\n  },\n  {\n    id: '3',\n    year: 1988,\n    title: 'Inauguración del Estadio',\n    description: 'Se inauguró el nuevo \"Estadio Libertad\", proporcionando un hogar moderno para el club y sus aficionados.',\n    imageUrl: 'https://picsum.photos/seed/history3/600/400',\n  },\n  {\n    id: '4',\n    year: 2010,\n    title: 'Debut Continental',\n    description: 'El Club Atlético Libertad debutó en una importante competición continental, mostrando su talento en un escenario internacional.',\n    imageUrl: 'https://picsum.photos/seed/history4/600/400',\n  },\n];\n\nexport const mockPlayers: Player[] = [\n  {\n    id: '1',\n    name: 'Santiago \"El Muro\" Rojas',\n    number: 1,\n    position: 'Goalkeeper', // Kept in English for filtering, translated in TeamRoster\n    bio: 'Una presencia imponente en la portería, conocido por sus increíbles reflejos y liderazgo.',\n    imageUrl: 'https://picsum.photos/seed/player1/300/300',\n    nationality: 'Argentino', // Nationality translated\n    joinedYear: 2018,\n  },\n  {\n    id: '2',\n    name: 'Isabella \"La Roca\" Gómez',\n    number: 4,\n    position: 'Defender', // Kept in English\n    bio: 'Una defensa tenaz e inteligente, imbatible en situaciones de uno contra uno.',\n    imageUrl: 'https://picsum.photos/seed/player2/300/300',\n    nationality: 'Brasileña', // Nationality translated\n    joinedYear: 2020,\n  },\n  {\n    id: '3',\n    name: 'Mateo \"El Mago\" Silva',\n    number: 10,\n    position: 'Midfielder', // Kept in English\n    bio: 'El corazón creativo del equipo, con un toque mágico y una visión que desbloquea defensas.',\n    imageUrl: 'https://picsum.photos/seed/player3/300/300',\n    nationality: 'Uruguayo', // Nationality translated\n    joinedYear: 2019,\n  },\n  {\n    id: '4',\n    name: 'Lucas \"El Rayo\" Fernández',\n    number: 7,\n    position: 'Forward', // Kept in English\n    bio: 'Velocidad vertiginosa y un rematador letal, siempre una amenaza para la portería contraria.',\n    imageUrl: 'https://picsum.photos/seed/player4/300/300',\n    nationality: 'Colombiano', // Nationality translated\n    joinedYear: 2021,\n  },\n  {\n    id: '5',\n    name: 'Elena \"La Capitana\" Rodriguez',\n    number: 5,\n    position: 'Midfielder', // Kept in English\n    bio: 'Capitana del equipo, conocida por su incansable ritmo de trabajo y su habilidad para controlar el mediocampo.',\n    imageUrl: 'https://picsum.photos/seed/player5/300/300',\n    nationality: 'Chilena', // Nationality translated\n    joinedYear: 2017,\n  },\n  {\n    id: '6',\n    name: 'Ricardo \"El Táctico\" Mendez',\n    number: 0, \n    position: 'Coach', // Kept in English\n    bio: 'El cerebro estratégico detrás del éxito del equipo, con años de experiencia.',\n    imageUrl: 'https://picsum.photos/seed/coach1/300/300',\n    nationality: 'Español', // Nationality translated\n    joinedYear: 2022,\n  },\n];\n\nexport const mockMatches: Match[] = [\n  {\n    id: '1',\n    date: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString(), \n    opponent: 'Club Deportivo Rivales',\n    homeTeam: 'Club Atlético Libertad',\n    awayTeam: 'Club Deportivo Rivales',\n    venue: 'Estadio Libertad',\n    status: 'upcoming',\n    competition: 'Liga - Jornada 15',\n    opponentLogoUrl: 'https://picsum.photos/seed/logo_rivales/50/50',\n  },\n  {\n    id: '2',\n    date: new Date(Date.now() + 14 * 24 * 60 * 60 * 1000).toISOString(), \n    opponent: 'Academia FC',\n    homeTeam: 'Academia FC',\n    awayTeam: 'Club Atlético Libertad',\n    venue: 'Estadio Academia',\n    status: 'upcoming',\n    competition: 'Liga - Jornada 16',\n    opponentLogoUrl: 'https://picsum.photos/seed/logo_academia/50/50',\n  },\n  {\n    id: '3',\n    date: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString(), \n    opponent: 'Unidos FC',\n    homeTeam: 'Club Atlético Libertad',\n    awayTeam: 'Unidos FC',\n    homeScore: 2,\n    awayScore: 1,\n    venue: 'Estadio Libertad',\n    status: 'past',\n    competition: 'Liga - Jornada 14',\n    opponentLogoUrl: 'https://picsum.photos/seed/logo_unidos/50/50',\n    highlightsUrl: '#',\n  },\n  {\n    id: '4',\n    date: new Date(Date.now() - 14 * 24 * 60 * 60 * 1000).toISOString(), \n    opponent: 'Estrella Roja CF',\n    homeTeam: 'Estrella Roja CF',\n    awayTeam: 'Club Atlético Libertad',\n    homeScore: 0,\n    awayScore: 0,\n    venue: 'Estadio Municipal',\n    status: 'past',\n    competition: 'Copa - Cuartos de Final',\n    opponentLogoUrl: 'https://picsum.photos/seed/logo_estrella/50/50',\n  },\n];\n\nexport const mockNewsArticles: NewsArticle[] = [\n  {\n    id: '1',\n    title: 'Importante Victoria Impulsa las Esperanzas de Libertad por el Título',\n    date: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(), \n    summary: 'Una emocionante victoria por 2-1 sobre Unidos FC ha colocado al Club Atlético Libertad en una sólida posición para el título de liga.',\n    imageUrl: 'https://picsum.photos/seed/news1/600/300',\n    category: 'Match Report', // Kept in English, translated in NewsCard\n    author: 'Equipo de Medios del Club',\n  },\n  {\n    id: '2',\n    title: 'Nuevo Talento de la Cantera Firma Contrato Profesional',\n    date: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString(), \n    summary: 'El joven prodigio Alejandro Vargas ha firmado su primer contrato profesional con el club, un testimonio de nuestro exitoso programa juvenil.',\n    imageUrl: 'https://picsum.photos/seed/news2/600/300',\n    category: 'Transfer', // Kept in English\n    author: 'Equipo de Medios del Club',\n  },\n  {\n    id: '3',\n    title: 'El Club Anuncia Programa de Alcance Comunitario para Escuelas Locales',\n    date: new Date(Date.now() - 10 * 24 * 60 * 60 * 1000).toISOString(), \n    summary: 'El Club Atlético Libertad se enorgullece en lanzar una nueva iniciativa destinada a promover el deporte y la vida saludable en las escuelas locales.',\n    imageUrl: 'https://picsum.photos/seed/news3/600/300',\n    category: 'Community', // Kept in English\n    author: 'Equipo de Medios del Club',\n  },\n];\n\nexport const clubContactInfo = {\n  address: '123 Calle Libertad, Ciudad Principal, País',\n  phone: '+12 345 678 9010',\n  email: 'info@clublibertad.example.com',\n  socialMedia: [\n    { name: 'Facebook', url: 'https://facebook.com/clublibertad', icon: 'FacebookIcon' },\n    { name: 'Twitter', url: 'https://twitter.com/clublibertad', icon: 'TwitterIcon' },\n    { name: 'Instagram', url: 'https://instagram.com/clublibertad', icon: 'InstagramIcon' },\n  ]\n};\n",
      "utils.ts": "import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n",
      "noticias-data.ts": "import type { NewsArticle } from '@/types';\n\nexport const noticias: NewsArticle[] = [\n  {\n    id: 'noticia-1',\n    title: '¡Gran Victoria del Gumarelo en el Clásico!',\n    date: '2024-08-01T10:00:00Z',\n    summary: 'Club Libertad demostró su garra y se impuso con un contundente 3-0 ante su rival tradicional, desatando la alegría de su hinchada.',\n    imageUrl: 'https://picsum.photos/seed/noticia1/400/250',\n    content: 'En una tarde soleada y con un estadio repleto, Club Atlético Libertad jugó uno de sus mejores partidos de la temporada. Desde el primer minuto, el equipo mostró una actitud ofensiva y un gran despliegue físico.\\nLos goles llegaron por medio de Roque Santa Cruz, Lorenzo Melgarejo y una joya de tiro libre de Héctor Villalba. El técnico Ariel Galeano destacó el compromiso de sus jugadores y la importancia de esta victoria para seguir peleando en lo más alto de la tabla.\\nLa afición decabi celebró hasta altas horas de la noche este triunfo memorable.',\n    category: 'Primer Equipo',\n  },\n  {\n    id: 'noticia-2',\n    title: 'Nuevas Incorporaciones Refuerzan el Plantel',\n    date: '2024-07-25T15:30:00Z',\n    summary: 'El club anunció la llegada de dos jóvenes promesas que se suman al plantel principal para aportar su talento y frescura.',\n    imageUrl: 'https://picsum.photos/seed/noticia2/400/250',\n    content: 'Pensando en los desafíos futuros, la directiva de Club Libertad concretó la incorporación de dos talentosos jugadores. Se trata del mediocampista creativo Juan Pérez, proveniente de las formativas, y el delantero Matías González, con experiencia en ligas menores.\\nAmbos jugadores expresaron su entusiasmo por vestir la camiseta decabi y prometieron darlo todo en cada entrenamiento y partido. \"Es un sueño cumplido llegar a un club tan grande como Libertad\", comentó Pérez en su presentación oficial.',\n    category: 'Fichajes',\n  },\n  {\n    id: 'noticia-3',\n    title: 'Libertad Avanza en la Copa: Próximo Rival Definido',\n    date: '2024-07-18T09:00:00Z',\n    summary: 'Tras una emocionante tanda de penales, el Gumarelo clasificó a la siguiente ronda de la copa y ya conoce a su próximo oponente.',\n    imageUrl: 'https://picsum.photos/seed/noticia3/400/250',\n    content: 'El camino de Club Libertad en la copa nacional continúa firme. Luego de un empate 1-1 en los 90 minutos, el equipo logró imponerse en la definición por penales gracias a la destacada actuación de su arquero Martín Silva.\\nEl próximo desafío será ante el Club Nacional, un rival siempre complicado. El cuerpo técnico ya está analizando al oponente y preparando la estrategia para seguir avanzando en la competición. La hinchada se ilusiona con la posibilidad de sumar un nuevo título a las vitrinas del club.',\n    category: 'Copa',\n  },\n  {\n    id: 'noticia-4',\n    title: 'Escuela de Fútbol: Abiertas las Inscripciones',\n    date: '2024-07-10T12:00:00Z',\n    summary: 'La prestigiosa escuela de fútbol de Club Libertad abre sus puertas para nuevos talentos. ¡Inscribe a tus hijos!',\n    imageUrl: 'https://picsum.photos/seed/noticia4/400/250',\n    content: 'Como cada año, Club Atlético Libertad invita a niños y jóvenes a formar parte de su reconocida escuela de fútbol. Las inscripciones para la temporada 2024-2025 ya están abiertas en diversas categorías.\\nCon un cuerpo técnico altamente calificado y unas instalaciones de primer nivel, la escuela busca no solo formar futbolistas, sino también inculcar valores como el respeto, la disciplina y el trabajo en equipo. Para más información sobre requisitos y horarios, acercarse a la secretaría del club o visitar la página web oficial.',\n    category: 'Formativas',\n  },\n];\n",
      "equipos-data.ts": "// src/lib/equipos-data.ts\nimport type { Equipo } from '@/types';\n\nexport const equipos: Equipo[] = [\n  {\n    nombre: \"CLUB ATLETICO ROSARIO CENTRAL\",\n    nombreCorto: \"Rosario Central\",\n    direccion: \"Dirección de Rosario Central\",\n    estadio: \"Estadio de Rosario Central\",\n    escudoUrl: \"/rivales/rosariocentral.png\",\n  },\n  {\n    nombre: \"CLUB SOCIAL Y DEPORTIVO VILLA NELLY UNIDO\",\n    nombreCorto: \"Villa Nelly Unido\",\n    direccion: \"Dirección de Villa Nelly Unido\",\n    estadio: \"Estadio de Villa Nelly Unido\",\n    escudoUrl: \"/rivales/villanellyunido.png\",\n  },\n  {\n    nombre: \"CALPINO FUTBOL CLUB\",\n    nombreCorto: \"Calpino\",\n    direccion: \"Dirección de Calpino\",\n    estadio: \"Estadio de Calpino\",\n    escudoUrl: \"/rivales/calpino.png\",\n  },\n  {\n    nombre: \"CLUB ATLETICO CERRILLOS\",\n    nombreCorto: \"Cerrillos\",\n    direccion: \"Dirección de Cerrillos\",\n    estadio: \"Estadio de Cerrillos\",\n    escudoUrl: \"/rivales/cerrillos.png\",\n  },\n  {\n    nombre: \"CLUB ATLETICO JUANICO\",\n    nombreCorto: \"Juanico\",\n    direccion: \"Dirección de Juanico\",\n    estadio: \"Estadio de Juanico\",\n    escudoUrl: \"/rivales/juanico.png\",\n  },\n  {\n    nombre: \"CLUB ATLETICO PROGRESO\",\n    nombreCorto: \"Progreso\",\n    direccion: \"Dirección de Progreso\",\n    estadio: \"Estadio de Progreso\",\n    escudoUrl: \"/rivales/progreso.png\",\n  },\n  {\n    nombre: \"CLUB DEFENSOR ATLANTA\",\n    nombreCorto: \"Defensor Atlanta\",\n    direccion: \"Dirección de Defensor Atlanta\",\n    estadio: \"Estadio de Defensor Atlanta\",\n    escudoUrl: \"/rivales/defensoratlanta.png\",\n  },\n  {\n    nombre: \"CLUB DEPORTIVO SAN FRANCISCO\",\n    nombreCorto: \"San Francisco\",\n    direccion: \"Dirección de San Francisco\",\n    estadio: \"Estadio de San Francisco\",\n    escudoUrl: \"/rivales/sanfrancisco.png\",\n  },\n  {\n    nombre: \"CLUB JUVENTUD MELILLA\",\n    nombreCorto: \"Juventud Melilla\",\n    direccion: \"Dirección de Juventud Melilla\",\n    estadio: \"Estadio de Juventud Melilla\",\n    escudoUrl: \"/rivales/juventudmelilla.png\",\n  },\n  {\n    nombre: \"CLUB LIBERTAD WASHINGTON\",\n    nombreCorto: \"Libertad Washington\",\n    direccion: \"Dirección de Libertad Washington\",\n    estadio: \"Estadio de Libertad Washington\",\n    escudoUrl: \"/rivales/libertadwashington.png\",\n  },\n  {\n    nombre: \"DARLING ATLETICO CLUB\",\n    nombreCorto: \"Darling\",\n    direccion: \"Dirección de Darling\",\n    estadio: \"Estadio de Darling\",\n    escudoUrl: \"/rivales/darling.png\",\n  },\n  {\n    nombre: \"LIVERPOOL CENTRO DEPORTIVO Y SOCIAL\",\n    nombreCorto: \"Liverpool CS\",\n    direccion: \"Dirección de Liverpool CS\",\n    estadio: \"Estadio de Liverpool CS\",\n    escudoUrl: \"/rivales/liverpoolcs.png\",\n  },\n  {\n    nombre: \"SANTA LUCIA FUTBOL CLUB\",\n    nombreCorto: \"Santa Lucía\",\n    direccion: \"Dirección de Santa Lucía\",\n    estadio: \"Estadio de Santa Lucía\",\n    escudoUrl: \"/rivales/santalucia.png\",\n  },\n  {\n    nombre: \"WANDERERS ATLETICO CLUB\",\n    nombreCorto: \"Wanderers\",\n    direccion: \"Dirección de Wanderers\",\n    estadio: \"Estadio de Wanderers\",\n    escudoUrl: \"/rivales/wanderers.png\",\n  },\n  {\n    nombre: \"CLUB AGUAS CORRIENTES\",\n    nombreCorto: \"Aguas Corrientes\",\n    direccion: \"Dirección de Aguas Corrientes\",\n    estadio: \"Estadio de Aguas Corrientes\",\n    escudoUrl: \"/rivales/aguascorrientes.png\",\n  },\n];\n"
    }
  },
  "types": {
    "__archivos__": {
      "index.ts": "export interface HistoricalEvent {\n  id: string;\n  year: number;\n  title: string;\n  description: string;\n  imageUrl?: string;\n}\n\nexport interface Player {\n  id: string;\n  name: string;\n  number: number;\n  position: 'Goalkeeper' | 'Defender' | 'Midfielder' | 'Forward' | 'Coach';\n  bio: string;\n  imageUrl: string;\n  nationality?: string; // Optional: country flag or name\n  joinedYear?: number;  // Optional\n}\n\nexport interface Match {\n  id: string;\n  date: string; // ISO string or a display-friendly string\n  opponent: string;\n  homeTeam: string;\n  awayTeam: string;\n  homeScore?: number;\n  awayScore?: number;\n  venue: string;\n  status: 'upcoming' | 'past' | 'live';\n  competition: string; // e.g., \"League Match\", \"Cup Final\"\n  opponentLogoUrl?: string;\n  highlightsUrl?: string; // Optional link to match highlights\n}\n\nexport interface NewsArticle {\n  id: string;\n  title: string;\n  date: string; // ISO string for date\n  summary: string; // Changed from extract to summary to match mock-data and news-card\n  imageUrl?: string; // Placeholder URL for image\n  content: string; // Full content of the news\n  category?: string;\n  author?: string; // Added to match mock-data\n}\n\nexport interface Equipo {\n  nombre: string;\n  direccion: string;\n  nombreCorto: string;\n  estadio: string;\n  escudoUrl: string;\n}\n"
    }
  },
  "ai": {
    "__archivos__": {
      "dev.ts": "// Flows will be imported for their side effects in this file.\n",
      "genkit.ts": "import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"
    }
  },
  "hooks": {
    "__archivos__": {
      "use-mobile.tsx": "import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n",
      "use-toast.ts": "\"use client\"\n\n// Inspired by react-hot-toast library\nimport * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n"
    }
  },
  "app": {
    "__archivos__": {
      "page.tsx": "import { LatestNewsSection } from '@/components/sections/latest-news-section';\nimport { UpcomingMatchSection } from '@/components/sections/upcoming-match-section';\nimport { HeroPrincipal } from '@/components/sections/hero-principal';\nimport { HistoriaResumen } from '@/components/sections/historia-resumen';\nimport { mockMatches } from '@/lib/mock-data'; \n\nexport default function HomePage() {\n  const upcomingMatch = mockMatches.find(match => match.status === 'upcoming');\n\n  return (\n    <div className=\"space-y-12 md:space-y-16\">\n      <HeroPrincipal />\n      <HistoriaResumen />\n      <LatestNewsSection />\n      {upcomingMatch && <UpcomingMatchSection match={upcomingMatch} />}\n    </div>\n  );\n}\n",
      "layout.tsx": "import type { Metadata } from 'next';\nimport { Geist, Geist_Mono } from 'next/font/google';\nimport './globals.css';\nimport { Header } from '@/components/layout/header';\nimport { Footer } from '@/components/layout/footer';\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { cn } from '@/lib/utils';\n\nconst geistSans = Geist({\n  variable: '--font-geist-sans',\n  subsets: ['latin'],\n});\n\nconst geistMono = Geist_Mono({\n  variable: '--font-geist-mono',\n  subsets: ['latin'],\n});\n\nexport const metadata: Metadata = {\n  title: 'Club Atlético Libertad',\n  description: 'Sitio web oficial del Club Atlético Libertad',\n};\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <html lang=\"es\" suppressHydrationWarning>\n      <body \n        className={cn(\n          geistSans.variable, \n          geistMono.variable, \n          \"antialiased flex flex-col min-h-screen\"\n        )}\n      >\n        <Header />\n        <main className=\"flex-grow container mx-auto px-4 py-8\">\n          {children}\n        </main>\n        <Footer />\n        <Toaster />\n      </body>\n    </html>\n  );\n}\n",
      "globals.css": "@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\nbody {\n  font-family: var(--font-geist-sans), Arial, Helvetica, sans-serif;\n}\n\n@layer base {\n  :root {\n    --background: 0 0% 100%; /* White */\n    --foreground: 215 28% 17%; /* Dark Gray/Blue */\n    --card: 0 0% 100%; /* White */\n    --card-foreground: 215 28% 17%; /* Dark Gray/Blue */\n    --popover: 0 0% 100%; /* White */\n    --popover-foreground: 215 28% 17%; /* Dark Gray/Blue */\n    --primary: 0 79% 50%; /* Red (#DC2626) */\n    --primary-foreground: 0 0% 100%; /* White */\n    --secondary: 220 13% 95%; /* Light Gray (#F3F4F6) */\n    --secondary-foreground: 215 28% 17%; /* Dark Gray/Blue */\n    --muted: 220 13% 96.1%; /* Light Gray similar to ShadCN default muted */\n    --muted-foreground: 215 28% 45.1%; /* Muted Gray */\n    --accent: 45 93% 51%; /* Gold (#EAB308) */\n    --accent-foreground: 215 28% 17%; /* Dark Gray/Blue for text on Gold */\n    --destructive: 0 84.2% 60.2%;\n    --destructive-foreground: 0 0% 98%;\n    --border: 220 13% 90%; /* Light Gray Border */\n    --input: 220 13% 90%; /* Light Gray Input Background */\n    --ring: 0 79% 50%; /* Red for focus rings */\n    --chart-1: 12 76% 61%;\n    --chart-2: 173 58% 39%;\n    --chart-3: 197 37% 24%;\n    --chart-4: 43 74% 66%;\n    --chart-5: 27 87% 67%;\n    --radius: 0.5rem;\n    --sidebar-background: 215 28% 12%; /* Darker for sidebar */\n    --sidebar-foreground: 0 0% 95%;\n    --sidebar-primary: 0 79% 50%; /* Red for active items */\n    --sidebar-primary-foreground: 0 0% 100%;\n    --sidebar-accent: 215 28% 20%;\n    --sidebar-accent-foreground: 0 0% 98%;\n    --sidebar-border: 215 28% 25%;\n    --sidebar-ring: 0 79% 50%;\n  }\n  .dark {\n    --background: 215 28% 10%; /* Very Dark Blue/Gray */\n    --foreground: 0 0% 98%; /* Near White */\n    --card: 215 28% 13%; /* Dark Card Background */\n    --card-foreground: 0 0% 98%; /* Near White */\n    --popover: 215 28% 10%; /* Very Dark Blue/Gray */\n    --popover-foreground: 0 0% 98%; /* Near White */\n    --primary: 0 79% 55%; /* Slightly Lighter Red for dark bg */\n    --primary-foreground: 0 0% 100%; /* White */\n    --secondary: 215 28% 15%; /* Darker Gray */\n    --secondary-foreground: 0 0% 98%; /* Near White */\n    --muted: 215 28% 15%; /* Darker Gray for muted */\n    --muted-foreground: 0 0% 63.9%; /* Lighter Gray for muted text */\n    --accent: 45 93% 55%; /* Slightly Lighter Gold for dark bg */\n    --accent-foreground: 215 28% 10%; /* Dark text on Gold */\n    --destructive: 0 62.8% 30.6%;\n    --destructive-foreground: 0 0% 98%;\n    --border: 215 28% 20%; /* Darker Border */\n    --input: 215 28% 20%; /* Darker Input Background */\n    --ring: 0 79% 55%; /* Lighter Red for focus rings */\n    --chart-1: 220 70% 50%;\n    --chart-2: 160 60% 45%;\n    --chart-3: 30 80% 55%;\n    --chart-4: 280 65% 60%;\n    --chart-5: 340 75% 55%;\n    --sidebar-background: 215 28% 8%; /* Even darker for sidebar */\n    --sidebar-foreground: 0 0% 95%;\n    --sidebar-primary: 0 79% 55%; /* Lighter Red */\n    --sidebar-primary-foreground: 0 0% 100%;\n    --sidebar-accent: 215 28% 15%;\n    --sidebar-accent-foreground: 0 0% 98%;\n    --sidebar-border: 215 28% 18%;\n    --sidebar-ring: 0 79% 55%;\n  }\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n  body {\n    @apply bg-background text-foreground;\n    min-height: 100vh;\n    display: flex;\n    flex-direction: column;\n  }\n  main {\n    flex-grow: 1;\n  }\n}\n"
    },
    "news": {
      "__archivos__": {
        "page.tsx": "import { UltimasNoticias } from '@/components/sections/ultimasnoticias';\nimport type { Metadata } from 'next';\n\nexport const metadata: Metadata = {\n  title: 'Noticias | Club Libertad',\n  description: 'Todas las últimas noticias y actualizaciones sobre Club Atlético Libertad.',\n};\n\nexport default function NoticiasPage() {\n  return (\n    <div className=\"container mx-auto px-4 py-12\">\n      <header className=\"text-center mb-12\">\n        <h1 className=\"text-4xl font-bold tracking-tight text-primary sm:text-5xl\">\n          Archivo de Noticias\n        </h1>\n        <p className=\"mt-4 text-xl text-muted-foreground\">\n          Explora todas las noticias y novedades de Club Atlético Libertad.\n        </p>\n      </header>\n      <UltimasNoticias showViewAllLink={false} /> {/* Show all news, no \"view all\" link needed here */}\n    </div>\n  );\n}\n"
      },
      "[id]": {
        "__archivos__": {
          "page.tsx": "import { noticias } from '@/lib/noticias-data';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle, CardFooter } from '@/components/ui/card';\nimport { ArrowLeft, CalendarDays, Tag } from 'lucide-react';\nimport Link from 'next/link';\nimport { Button } from '@/components/ui/button';\nimport Image from 'next/image';\nimport type { Metadata } from 'next';\nimport { notFound } from 'next/navigation';\n\nexport async function generateStaticParams() {\n  return noticias.map((noticia) => ({\n    id: noticia.id,\n  }));\n}\n\ninterface NewsDetailPageProps {\n  params: { id: string };\n}\n\nexport async function generateMetadata({ params }: NewsDetailPageProps): Promise<Metadata> {\n  const noticia = noticias.find((n) => n.id === params.id);\n  if (!noticia) {\n    return {\n      title: 'Noticia no encontrada',\n    };\n  }\n  return {\n    title: `${noticia.title} | Club Libertad`,\n    description: noticia.summary, // Changed from extract to summary\n  };\n}\n\n\nexport default function NewsDetailPage({ params }: NewsDetailPageProps) {\n  const noticia = noticias.find((n) => n.id === params.id);\n\n  if (!noticia) {\n    notFound();\n  }\n\n  const newsDate = new Date(noticia.date);\n  const formattedDate = newsDate.toLocaleDateString('es-ES', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit',\n  });\n\n  return (\n    <div className=\"container mx-auto px-4 py-12\">\n      <header className=\"mb-8\">\n         <Button asChild variant=\"outline\" className=\"mb-6 group\">\n          <Link href=\"/noticias\">\n            <ArrowLeft className=\"mr-2 h-4 w-4 group-hover:-translate-x-1 transition-transform\" /> Todas las Noticias\n          </Link>\n        </Button>\n      </header>\n\n      <Card className=\"shadow-xl overflow-hidden\">\n        {noticia.imageUrl && (\n            <div className=\"relative aspect-[16/9] w-full\">\n              <Image\n                src={noticia.imageUrl}\n                alt={noticia.title}\n                layout=\"fill\"\n                objectFit=\"cover\"\n                data-ai-hint=\"news main image\"\n              />\n            </div>\n          )}\n        <CardHeader className=\"p-6\">\n          <CardTitle className=\"text-3xl md:text-4xl font-bold text-primary\">\n            {noticia.title}\n          </CardTitle>\n          <div className=\"flex items-center text-sm text-muted-foreground space-x-2 pt-2\">\n            <CalendarDays className=\"h-4 w-4\" />\n            <span>{formattedDate}</span>\n            {noticia.category && (\n              <>\n                <span className=\"mx-1\">•</span>\n                <Tag className=\"h-4 w-4\" />\n                <span>{noticia.category}</span>\n              </>\n            )}\n          </div>\n        </CardHeader>\n        <CardContent className=\"p-6 pt-0\">\n          <div className=\"text-lg text-foreground space-y-4\">\n            {noticia.content.split('\\n').map((paragraph, index) => (\n              <p key={index}>{paragraph}</p>\n            ))}\n          </div>\n        </CardContent>\n         <CardFooter className=\"p-6 pt-2\">\n             <Button asChild variant=\"link\" className=\"text-primary p-0 hover:text-accent group\">\n                <Link href=\"/noticias\">\n                    <ArrowLeft className=\"mr-2 h-4 w-4 group-hover:-translate-x-1 transition-transform\" /> Volver a Noticias\n                </Link>\n            </Button>\n        </CardFooter>\n      </Card>\n    </div>\n  );\n}\n"
        }
      }
    },
    "history": {
      "__archivos__": {
        "page.tsx": "import { HistoryTimeline } from '@/components/club/history-timeline';\nimport { SectionTitle } from '@/components/shared/section-title';\nimport { mockHistoricalEvents } from '@/lib/mock-data';\nimport { BookOpen } from 'lucide-react';\nimport { HeroHistoria } from '@/components/sections/hero-historia';\n\nexport default function HistoryPage() {\n  return (\n    <div>\n      <HeroHistoria />\n      <SectionTitle \n        title=\"Línea de Tiempo Detallada\" \n        icon={BookOpen}\n        description=\"Viaja a través de los momentos decisivos del Club Atlético Libertad, desde sus humildes comienzos hasta sus mayores triunfos.\"\n        className=\"pt-12\" // Add padding top to separate from HeroHistoria\n        id=\"linea-tiempo\"\n      />\n      <HistoryTimeline events={mockHistoricalEvents} />\n    </div>\n  );\n}\n"
      }
    },
    "roster": {
      "__archivos__": {
        "page.tsx": "import { TeamRoster } from '@/components/club/team-roster';\nimport { SectionTitle } from '@/components/shared/section-title';\nimport { mockPlayers } from '@/lib/mock-data';\nimport { Users } from 'lucide-react';\n\nexport default function RosterPage() {\n  return (\n    <div>\n      <SectionTitle \n        title=\"Conoce Nuestro Equipo\" \n        icon={Users}\n        description=\"Conoce a los talentosos jugadores y al dedicado cuerpo técnico del Club Atlético Libertad.\"\n      />\n      <TeamRoster players={mockPlayers} />\n    </div>\n  );\n}\n"
      }
    },
    "contact": {
      "__archivos__": {
        "page.tsx": "import { ContactForm } from '@/components/club/contact-form';\nimport { ClubInfo } from '@/components/club/club-info';\nimport { SectionTitle } from '@/components/shared/section-title';\nimport { clubContactInfo } from '@/lib/mock-data';\nimport { Mail } from 'lucide-react';\n\nexport default function ContactPage() {\n  return (\n    <div>\n      <SectionTitle \n        title=\"Contáctanos\" \n        icon={Mail}\n        description=\"¡Nos encantaría saber de ti! Contáctanos con cualquier pregunta, consulta o simplemente para saludar.\"\n      />\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 lg:gap-12 items-start\">\n        <ContactForm />\n        <ClubInfo \n          address={clubContactInfo.address}\n          phone={clubContactInfo.phone}\n          email={clubContactInfo.email}\n          socialMedia={clubContactInfo.socialMedia.map(sm => ({...sm, iconName: sm.icon as 'Facebook' | 'Twitter' | 'Instagram'}))}\n        />\n      </div>\n    </div>\n  );\n}\n"
      }
    },
    "matches": {
      "__archivos__": {
        "page.tsx": "import { MatchSchedule } from '@/components/club/match-schedule';\nimport { SectionTitle } from '@/components/shared/section-title';\nimport { mockMatches } from '@/lib/mock-data';\nimport { CalendarDays } from 'lucide-react';\n\nexport default function MatchesPage() {\n  return (\n    <div>\n      <SectionTitle \n        title=\"Partidos y Resultados\" \n        icon={CalendarDays}\n        description=\"Mantente actualizado con los próximos partidos del Club Atlético Libertad y revisa los resultados pasados.\"\n      />\n      <MatchSchedule matches={mockMatches} />\n    </div>\n  );\n}\n"
      }
    }
  }
}